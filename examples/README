This README describes how to use two tar files that are examples 
of an OSDL implementation of dbt2 using a cached variation and a non-cached
variation on a Hyperthreaded machine (4 physical cpus, 8 logical). 

The cached case touches only a part of the 100 Warehouse database  (8 driver
instances touching 2 warehouses each ) so that the database footprint will 
fit into memory on a 4GB configuration.  The non-cached case
runs 16 driver instances and touches 96 of the 100 warehouses (6 each 
driver) which will not fit into memory entirely, so there is considerably more
I/O to the datafiles, but not as many transactions per second or logging as
the cached case.

We use this setup to run the kit over and over, restoring the database
each time (for consistency). 

There are two tar files that represent the example 
set up for the Hyperthreaded project's install of dbt2:

dbt2_HT_output.tar  dbt2_HT.tar


dbt2_HT.tar should be installed under the kit's "scripts" directory 
but may overwrite files in the scripts subdirectories (in particular the
sadpb subdirectory), so save them before continuing.

The tar file includes scripts in scripts/sapdb to backup and restore the 
database.  We restore the database after each run.  A backup must
be created in order to do this.  You will have to change the scripts
to point to file systems sized to store the database backups.

The create scripts in sapdb show how we created the database, what indexes
we used and what database parameters we use when the run starts.  The run 
scripts are set up to change the parameters (for tuning purposes) just before
the run, so the parameters you see in the create scripts are not necessarily 
the ones used in a run.

You will find other scripts that start and stop the database, display
plans and so forth. 

"tar xvf  dbt2_HT.tar"  will  also create the subdirectory wrap_sets.  Each
file here is a script that does a run.   There are tests doing 
the cached and the non-cached cases in that subdirectory:
	
wrap_16x6*       non-cached cases
wrap_8x2_*       cached cases

Wrap scripts are saved in the scripts/wrap_set directory, but they are
executed at the scripts directory level.  They all call scripts/run_test9.sh, 
which is where you will see the dbt2 driver called (in case you want
an example). For these runs we use the same set of seeds, so you will see an
example of how to do this in run_test9.sh.  

These scripts gather database stats and system stats at appropriate 
times during the runs.  They also save things from /proc, database parameter 
files, query plans, and so forth.  You may have to install test tools on 
your system to see these results (x_cons, vmstat, iostat).  

A series of runs can be made.  See the script doit.sh for examples.

Each run will be assigned the next run number.  That number
is stored in the file ".run_number" and it is incremented with each run.  

Output from each run is stored in the output directory under a 
subdirectory named by run number.  You should create the subdirectory 
scripts/output and untar dbt2_HT_output.tar there.  Example run results are 
included on the tar file.  For example output/206 is a non-cached case, 
output/210 is a cached case run.

The dbt2_HT_output.tar file includes some tools we use to plot the 
vmstat output.  Tools also compile output from similar runs that we 
transfer to other systems for publication. See the README file in 
scripts/output  






