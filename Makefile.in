# Makefile.in
# 31 October 2002

# $Id: Makefile.in 1190 2003-09-05 17:20:15Z fimath $

# Source directory is current directory
srcdir=$(PWD)

## Object Files
COMMON_OBJ=	common_obj datagen_obj
SPECIAL_OBJ=	terminal_obj client_obj
STANDALONE_OBJ=	$(patsubst %_obj,%_standalone_obj,$(SPECIAL_OBJ))

# Files to simply ensure that the system is functioning properly
# Clean is excepted from these
ALWAYS_DEPEND=	configure make.common Makefile

## Make files
MAKE_STANDALONE=	Makefile.standalone

## BUILD

all: $(ALWAYS_DEPEND) $(COMMON_OBJ) $(SPECIAL_OBJ) db_obj @INTERFACE_OBJ@ tools_obj

standalone:	 $(ALWAYS_DEPEND) $(COMMON_OBJ) $(STANDALONE_OBJ) db_obj @INTERFACE_OBJ@ tools_obj

$(COMMON_OBJ) $(SPECIAL_OBJ):
	cd $(srcdir)/$(patsubst %_obj,%,$@) && $(MAKE)

$(STANDALONE_OBJ):
	cd $(srcdir)/$(patsubst %_standalone_obj,%,$@) && $(MAKE) -f $(MAKE_STANDALONE)

db_obj:
	cd $(srcdir)/interfaces && $(MAKE)

libpq_obj:
	cd $(srcdir)/interfaces/libpq && $(MAKE)

cfuncs_obj:
	cd $(srcdir)/storedproc/pgsql/c && $(MAKE)

odbc_obj:
	cd $(srcdir)/interfaces/odbc && $(MAKE)

tools_obj:
	cd $(srcdir)/tools && $(MAKE)


## CLEAN
clean:
	for dir in $(patsubst %_obj,%,$(COMMON_OBJ)) $(patsubst %_obj,%,$(SPECIAL_OBJ)) \
			 tools interfaces interfaces/odbc interfaces/libpq ; \
	do \
		cd $(srcdir)/$${dir} && $(MAKE) clean ; \
	done


####
# Build and Run configure files when configure or a template is updated.

configure: configure.in
	autoconf

make.common: configure make.common.in
	cd $(srcdir) && ./configure

# Fix my makefile, then execute myself
Makefile : Makefile.in configure
	cd $(srcdir) && ./configure
	echo "Please run $(MAKE) again"
	false
