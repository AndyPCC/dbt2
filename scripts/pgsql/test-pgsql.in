#!/bin/bash
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2006 Mark Wong & Open Source Development Labs, Inc.
#

TOPDIR="@abs_top_srcdir@"
PGDIR="${TOPDIR}/scripts/pgsql"
source ${TOPDIR}/scripts/dbt2_profile || exit 1

export PATH="$PATH:~/bin"

MODULE="pgsql"
INSTALL_DIR="/tmp/pgsql-tmp"
WORKING_DIR="/tmp"

DATE=`date +%Y-%m-%d --date="yesterday"`
FORCE=0
GENERATE_DATA=0
REBOOT=0
SCALE_FACTOR=1
SAVE=0

DBCON=20
DURATION=120

while getopts "C:c:D:d:fgj:nop:rw:" OPT; do
	case ${OPT} in
	C)
		COMMENT=${OPTARG}
		;;
	c)
		DBCON=`echo ${OPTARG} | egrep "^[0-9]+$"`
		;;
	D)
		DATE=${OPTARG}
		if [ -d ${DATE} ]; then
			SAVE=1
		fi
		;;
	d)
		DURATION=`echo ${OPTARG} | egrep "^[0-9]+$"`
		;;
	f)
		FORCE=1
		;;
	g)
		GENERATE_DATA=1
		;;
	j)
		J_FLAG="-j${OPTARG}"
		;;
	n)
		NO_THINK="-n"
		;;
	o)
		OPROFILE_FLAG="-o"
		;;
	p)
		TEST_PARAMETERS=${OPTARG}
		;;
	r)
		REBOOT=1
		;;
	w)
		SCALE_FACTOR=${OPTARG}
		;;
	esac
done
DEFAULT_COMMENT="autotesting ${DATE} ${SCALE_FACTOR}"
if [ "x${COMMENT}" == "x" ]; then
	COMMENT="${DEFAULT_COMMENT}"
fi

if [ -d "${WORKING_DIR}/${MODULE}" ]; then
	if [ ${FORCE} -eq 1 ]; then
		killall -9 postmaster
		rm -rf ${WORKING_DIR}/${MODULE} || exit 1
		rm -r /tmp/.s.PGSQL.5432
		rm -r /tmp/.s.PGSQL.5432.lock
	else
		echo "'${WORKING_DIR}/${MODULE}' exists, cannot continue"
		exit 1
	fi
fi

#
# Export and install PostgreSQL from CVS.
#
${PGDIR}/install-source ${DATE} ${WORKING_DIR} ${INSTALL_DIR} \
		${J_FLAG} || exit 1

#
# Configure kit and rebuild stored functions.
#
cd ${TOPDIR} || exit 1
autoreconf --install
make distclean
#
# Need to figure out why 'make distclean' doesn't clean out stored funcs.
#
if [ -f "${TOPDIR}/storedproc/pgsql/c/funcs.o" ]; then
	rm -f ${TOPDIR}/storedproc/pgsql/c/funcs.o || exit 1
fi
if [ -f "${TOPDIR}/storedproc/pgsql/c/funcs.so" ]; then
	rm -f ${TOPDIR}/storedproc/pgsql/c/funcs.so || exit 1
fi
./configure --with-postgresql=${INSTALL_DIR} || exit 1
make || exit 1
#
# Source pgsql environment.
#
source ${TOPDIR}/scripts/dbt2_profile || exit 1

if [ -d "${PGDATA}" ]; then
	if [ ${FORCE} -eq 1 ]; then
		${PGDIR}/destroy-installation -f
	else
		echo "'${PGDATA}' exists, cannot continue"
		exit 1
	fi
fi

#
# Generate database data.
#
if [ ${GENERATE_DATA} -eq 1 ]; then
	mkdir ${DBDATA}/${SCALE_FACTOR} || exit 1
	${TOPDIR}/src/datagen --pgsql -d ${DBDATA}/${SCALE_FACTOR} \
			-w ${SCALE_FACTOR}
fi
if [ ! -d "${DBDATA}/${SCALE_FACTOR}" ]; then
	echo "'${DBDATA}/${SCALE_FACTOR}' doesn't exist"
	exit 1
fi
#
# Build the database.
#
if [ -n ${LOAD_PARAMTERS} ]; then
	${PGDIR}/build_db.sh -d ${DBDATA}/${SCALE_FACTOR} -t -b \
			-p "${LOAD_PARAMTERS}" || exit 1
else
	./build_db.sh -d ${DBDATA}/${SCALE_FACTOR} -t -b || exit 1
fi
#
# Start the test.
#
if [ -n ${TEST_PARAMETERS} ]; then
	${TOPDIR}/scripts/run_workload.sh -w ${SCALE_FACTOR} -d ${DURATION} \
			-c ${DBCON} -s 100 -p "${TEST_PARAMETERS}" ${OPROFILE_FLAG} \
			-z "${COMMENT}" ${NO_THINK} || exit 1
else
	${TOPDIR}/scripts/run_workload.sh -w ${SCALE_FACTOR} -d ${DURATION} \
			-c ${DBCON} -s 100 ${OPROFILE_FLAG} \
			-z "${COMMENT}" ${NO_THINK} || exit 1
fi

if [ ${FORCE} -eq 1 ]; then
	#
	# If you don't know why the postmaster isn't shutting down sometimes,
	# so kill it.
	#
	killall -9 postmaster
	rm -f /tmp/.s.PGSQL.5432
	rm -f /tmp/.s.PGSQL.5432.lock
fi

#
# Cleaning up.
#
if [ -d "${PGDATA}" ]; then
	${PGDIR}/destroy-installation -f
fi
if [ ${SAVE} -eq 0 ]; then
	rm -rf ${WORKING_DIR}/${MODULE} || exit 1
fi
rm -rf ${INSTALL_DIR} || exit 1

exit 0
